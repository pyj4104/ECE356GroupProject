DELIMITER @@
CREATE PROCEDURE `ChangeOrAuthenticate`
	(IN Login_Alias VARCHAR(8),
	IN Password VARCHAR(16),
	IN Old_Password VARCHAR(16),
        IN Salt VARCHAR(256))
BEGIN
    DECLARE varSalt VARCHAR(256);
    DECLARE givenHashedpassword VARCHAR(256);
    DECLARE actualHashedpassword VARCHAR(256);
    SELECT L.Hashed_Password INTO actualHashedPassword FROM Login L WHERE Alias = Login_Alias;
    
    SELECT SHA2(CONCAT((SELECT L.Salt FROM Login L WHERE Alias = Login_Alias), Old_Password), 256) INTO givenHashedpassword;
    IF (givenHashedpassword = actualHashedPassword) THEN
        SELECT givenHashedpassword = SHA2(CONCAT(Salt, Password), 256);
        UPDATE Login L
        SET L.Hashed_Password = SHA2(CONCAT(Salt, Password), 256), L.Salt = Salt
        WHERE L.Alias LIKE Login_Alias;
    ELSE
        SIGNAL SQLSTATE '28000'
        SET MESSAGE_TEXT = 'Authentication Failed';
    END IF;
    
END@@

DELIMITER @@
CREATE PROCEDURE `Authenticate`
	(IN Login_Alias VARCHAR(8),
	IN Password VARCHAR(16),
        OUT Result INT)
BEGIN
    DECLARE varSalt VARCHAR(256);
    DECLARE givenHashedpassword VARCHAR(256);
    DECLARE actualHashedpassword VARCHAR(256);
    SELECT L.Hashed_Password INTO actualHashedPassword FROM Login L WHERE Alias = Login_Alias;
    
    SELECT SHA2(CONCAT((SELECT L.Salt FROM Login L WHERE Alias = Login_Alias), Password), 256) INTO givenHashedpassword;
    IF (givenHashedpassword = actualHashedPassword) THEN
        SET Result = 1;
    ELSE
        SET Result = 0;
    END IF;
    
END@@